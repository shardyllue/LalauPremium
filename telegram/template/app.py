from aiogram.types import (
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from json import dumps

from db.base import AppTable

from aiogram.utils.deep_linking import get_start_link

from utils.base import is_moder

import module.app as Mapp
import template.base as Tbase
import module.edit as Medit
import module.premium as Mpremium
import module.moder as Mmoder
import module.payment as Mpayment



class AppUser:

    text = """
–ì–æ—Ä–æ–¥:  {app.city}
–í–æ–∑—Ä–∞—Å—Ç:  {app.years}
–ò–º—è:  {app.name}
–ü–æ–ª:  {app.gender}
–†–µ–π—Ç–∏–Ω–≥:  {app.score}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:  {username}
    """

    delete =  """<b>–í—ã —É–¥–∞–ª–∏–ª–∏ –∞–Ω–∫–µ—Ç—É</b>\n\n<i>–í –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –í—ã —Å–º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –µ—ë –∑–∞–Ω–æ–≤–∞!</i>"""

    def kb(app : AppTable):

        _kb = InlineKeyboardMarkup(row_width=1)


 
        
        if app.video_id is not None:
            _kb.add(
                InlineKeyboardButton(
                    text="üëÅ –ú–æ—ë –≤–∏–¥–µ–æ",
                    callback_data=Mapp.UserCall.new(
                        action="open.video"
                    )
                ),    
                InlineKeyboardButton(
                    text=(
                        "üü¢ –°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ: –ü—É–±–ª–∏—á–Ω—ã–π" 
                        if app.pub_video else 
                        "*Ô∏è‚É£ –°—Ç–∞—Ç—É—Å –≤–∏–¥–µ–æ: –ü—Ä–∏–≤–∞—Ç–Ω—ã–π"),
                    callback_data=(
                        Medit.EditCall.new(value="switch.video.off") 
                        if app.pub_video else 
                        Medit.EditCall.new(value="switch.video.on") 
                    )
                )
            )

        _kb.add(
            InlineKeyboardButton(
                text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                callback_data=Mapp.UserCall.new(
                    action="open.edit"
                )
            )
        ).row(
            InlineKeyboardButton(
                text="‚ùå –£–¥–∞–ª–∏—Ç—å",
                callback_data=Mapp.UserCall.new(
                    action="delete"
                )
            ),InlineKeyboardButton(
                text="üîù –†–µ–π—Ç–∏–Ω–≥",
                callback_data=Mpayment.UserCall.new(
                    action="form",
                    from_id=app.user_id,
                    to_id=app.user_id,
                    page=-1
                )
            ),        
        )
        
        if app.moderated is False:
            _kb.add(
                InlineKeyboardButton(
                    text="‚è∫ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ ...",
                    callback_data="."
                )
            )

        elif app.moderated is None:
            _kb.add(
                InlineKeyboardButton(
                    text="–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞",
                    callback_data="."
                )
            )   

        return _kb


class AppPremium:

    text = """
–ì–æ—Ä–æ–¥:  {app.city}
–í–æ–∑—Ä–∞—Å—Ç:  {app.years}
–ò–º—è:  {app.name}\n
–ü–æ–ª:  {app.gender}
–†–µ–π—Ç–∏–Ω–≥:  {app.score}
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:  {username}
    """
    err = """üìé –ü–æ—Ö–æ–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–µ—à–∏–ª —É–¥–∞–ª–∏—Ç—å —Å–≤–æ—é –∞–Ω–∫–µ—Ç—É –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ—ë, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–¥–æ–±—Ä—è—Ç—å –∞–Ω–∫–µ—Ç—É –∏–ª–∏ –æ–Ω –µ—ë —Å–æ–∑–¥–∞—Ç—å!"""
    getting = """üîç –ü–æ–¥–æ–∂–¥–∏—Ç–µ... –∏—â–µ–º –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    def delete_app(page : int, gender : str):
        _kb = InlineKeyboardMarkup()

        _kb.add(InlineKeyboardButton(
            text=Tbase.Back.btn_text,
            callback_data=Mpremium.bandCall.new(action="open", page=page, gender=gender)
        ))

        return _kb


    def kb(
        app : AppTable, 
        chat_id : int,
        gender : str,
        photo_mode : bool = True, 
        page : int = 0,
        moder : int = False
    ):
        _kb = InlineKeyboardMarkup()


        if (app.video_id is not None) and (app.pub_video is True):

            if photo_mode:
                _kb.add(
                    InlineKeyboardButton(
                        text="üì∏ –í–∏–¥–µ–æ", 
                        callback_data=Mpremium.appCall.new(
                            action="video", 
                            user_id=app.user_id, 
                            page=page
                        )
                    ),
                )
            else:
                _kb.add(
                    InlineKeyboardButton(
                        text="üì∏ —Ñ–æ—Ç–æ", 
                        callback_data=Mpremium.appCall.new(
                            action="open", 
                            user_id=app.user_id, 
                            page=page
                        )
                    ),
                )

        _kb.row(
            InlineKeyboardButton(
                text="üéÅ –ß–∞–µ–≤—ã–µ", 
                callback_data=Mpayment.UserCall.new(
                    action="form",
                    from_id=chat_id,
                    to_id=app.user_id,
                    page=page
                )
            ),
            InlineKeyboardButton(
                text=Tbase.Back.btn_text,
                callback_data=Mpremium.bandCall.new(action="open", gender=gender, page=page)
            ),
        )

        if moder:
            _kb.add(InlineKeyboardButton(
                text="–£–¥–∞–ª–∏—Ç—å",
                callback_data=Mpremium.moderCall.new(user_id=app.user_id, action="delete", page=page, gender=app.gender)
            ),)

        return _kb


class Posting:

    text = """
–ì–æ—Ä–æ–¥:  {app.city}
–í–æ–∑—Ä–∞—Å—Ç:  {app.years}
–ò–º—è:  {app.name}\n
–ü–æ–ª:  {app.gender}
–†–µ–π—Ç–∏–Ω–≥:  {app.score}
    """


    async def kb(user_id : int, page : int, gender : str):
        
        return InlineKeyboardMarkup().add(InlineKeyboardButton(
            text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å",
            url=await get_start_link(payload=dumps({
                    "user_id" : user_id,
                    "page" : page,
                    "gender" : gender
                }))
            )
        )


class Video:

    text = "–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∏–∂–µ"
    btn_skip = "–£–±—Ä–∞—Ç—å"

    def kb():
        return InlineKeyboardMarkup().add(
            InlineKeyboardButton(
                text=Video.btn_skip,
                callback_data=Mapp.UserCall.new(
                    action="close.video"
                )
            )
        )

